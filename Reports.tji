# Now the project has been specified completely. Stopping here would
# result in a valid TaskJuggler file that could be processed and
# scheduled. Here reports will be generated to visualize the
# results.

navigator navbar {
  hidereport 0
  }

  macro TaskTip [
    tooltip istask() -8<-
    '''Start: ''' <-query timeformat='%Y-%m-%d %R' attribute='start' ->
    '''End: ''' <-query timeformat='%Y-%m-%d %R' attribute='end'->
    ----
    '''Helfer:'''

    <-query attribute='resources'->
    ----
    '''Vorgänger: '''

    <-query attribute='precursors'->
    ----
    '''Nachfolger: '''

    <-query attribute='followers'->
    ->8-
  ]

  textreport frame "" {
    header -8<-
    == FabLab Region Nürnberg -- Umzug ==
    <[navigator id="navbar"]>
    ->8-
    footer "----"
    textreport index "index" {
    formats html
    center '<[report id="index"]>'
  }

  textreport "Status" {
    formats html
    center -8<-
    <[report id="status.dashboard"]>
    ----
    <[report id="status.completed"]>
    ----
    <[report id="status.ongoing"]>
    ----
    <[report id="status.future"]>
    ->8-
  }

#  textreport umzug "Umzug" {
#    textreport umzug1 "Umzug1" {
#      formats html
#      center '<[report id="umzug"]>'
#    }
#  }


#textreport "Deliveries" {
#    formats html
#    center '<[report id="deliveries"]>'
#  }

#  textreport "ContactList" {
#    formats html
#    title "Contact List"
#    center '<[report id="contactList"]>'
#  }
#
  textreport "ResourceGraph" {
    formats html
    title "Übersicht Mitarbeiter"
    center '<[report id="resourceGraph"]>'
  }
}

# A traditional Gantt chart with a project overview.
taskreport index "" {
  header -8<-
  === Umzug -- Übersicht ===


  === Projektplan ===
  ->8-
  columns bsi { title 'Nr' }, name, start, end, effort, chart { scale day ${TaskTip} }
  # For this report we like to have the abbreviated weekday in front
  # of the date. %a is the tag for this.
  timeformat "%a %Y-%m-%d"
  loadunit days
  hideresource 1
  sorttasks tree.up
  caption 'Alle Aufwände sind in Manntagen angegeben.'

  footer -8<-
  === Mitarbeiter ===

  Der [[ResourceGraph]] zeigt die Einteilung der Mitarbeiter

  === Aktueller Status ===

  Wir brauchen MEHR DAMPF !
  ->8-
}

# LeafTask <id> <name>
macro LeafTask [
  taskreport rep_${1} "${2}" {
    formats html
    columns bsi { title 'Nr' }, name, start, end, effort, chart { ${TaskTip} }
    # For this report we like to have the abbreviated weekday in front
    # of the date. %a is the tag for this.
    timeformat "%a %Y-%m-%d"
    loadunit days
    hideresource 1
    hidetask ~ischildof(umzug.${1})
    sorttasks tree.up
  }
]

${LeafTask "boden_und_decken" "Boden und Decken"}
${LeafTask "it_fablab" "IT FabLab"}

# Macro to set the background color of a cell according to the alert
# level of the task.
macro AlertColor [
  cellcolor plan.alert = 0 "#00D000" # green
  cellcolor plan.alert = 1 "#D0D000" # yellow
  cellcolor plan.alert = 2 "#D00000" # red
]

taskreport status "" {
  columns bsi { width 50 title 'Nr' }, name { width 50 }, start { width 50 }, end { width 50 }, effort { width 50 },
  alert { tooltip plan.journal != ''
  "<-query attribute='journal'->" width 150 },
  status { width 150 }

  taskreport dashboard "" {
    headline "Project Dashboard (<-query attribute='now'->)"
    columns name { title "Task" ${AlertColor} width 200},
            resources { width 200 ${AlertColor}
            listtype bullets listitem
            "<-query attribute='name'->"
            start ${projectstart} end ${projectend} },
            alerttrend { title "Trend" ${AlertColor} width 50 },
            journal { width 350 ${AlertColor} }
            journalmode status_up
            journalattributes headline, author, date, summary, details
            hidetask ~hasalert(0)
            sorttasks alert.down, plan.end.up
            period %{${now} - 1w} +1w
   }
   taskreport completed "" {
     headline "Fertig"
     hidetask ~(plan.end <= ${now})
   }
   taskreport ongoing "" {
     headline "In Arbeit"
     hidetask ~((plan.start <= ${now}) & (plan.end > ${now}))
  }
  taskreport future "" {
    headline "Geplant"
    hidetask ~(plan.start > ${now})
  }
}

# A list of tasks showing the resources assigned to each task.
taskreport umzug_resources "" {
  headline "Umzug - Übersicht Helfer"
  columns bsi { title 'Nr' }, name, start, end, effort { title "Work" },
      duration, chart { ${TaskTip} scale day width 500 }
  timeformat "%Y-%m-%d"
  hideresource ~(isleaf() & isleaf_())
  sortresources name.up
#  taskroot project.grundriss
}

# A graph showing resource allocation. It identifies whether each
# resource is under- or over-allocated for.
resourcereport resourceGraph "" {
  headline "Übersicht Arbeitsbelastung"
  columns no, name, effort, daily { ${TaskTip} width 800 }
  #columns no, name, duration, daily { ${TaskTip} }
  loadunit shortauto
  # We only like to show leaf tasks for leaf resources.
  #hidetask ~(isleaf() & isleaf_())
  hidetask @all
  sorttasks plan.start.up
}
